para pasa codgio de html a javascrip uso {{}}
luego puedo usar un (click) para dar codigo de un evento por ejemplo un button
el template  es la parte del html 
no se aconseja meter tanta logica en el html

como crear un  componente manualmente
se agregan mas piezas al componente
imp + tab me genera la stringa di import

cannot get / --> error grave de angular no se puede renderizar
providers --> son servicios espicificos  a un modulo 

Separacion de directorios
para cada componente viene creada una directory
caundo se crea un componente deve estar importado en su modulo 
concepto de one way data binding --> enlazado d euna sola via

como crear un componente  manualmente 
ng generate c heroes/listado

ng g c path/nomeComponente




*ngFor --> si no se cuantos elementos de de un arreglo 
manipulamos el dom de manera facil con directivas  estructurales

<ol *ngFor="let heore of heroes; let i = index">
  {{
    i + 1
  }}
  -
  {{
    heore
  }}
</ol>
------------------------------------------
*ngIf --> <div *ngIf="heroeCancelado !== ''">

ngTemplate usa una referencia lcal que inicia con # la usamos con el ngElse para despues encotrar la 
condicion y su comportamiento


-----------------------------

Modulos  --> No definimos reduncias dentro de los Modulos
nos ayudana agrupar componentes que tienen sentido entre si 
para expandir la funcionalidad
encapsulan y nos ayudan con lazy low
que es cuando se cargan los elementos cuando estan siendo demandados
cuando uso un modulo en commun solo me basta agregarlo  ac
app module

Commun Module-->nos ayuda a usar los templates como el ngIf
--------------------------------------------
Github como subir un proyecto
1) creamos un nuevo repositorio
2)usamos los comandos de cuando creamos nuestro repositorio
3)git init
4)git add . -->toma todos lo cambios
5)git commit -m  "primer commit"
6)git git remote add origin url
gir branch -M main 
7)git push -u origin main
--------------------------------------------------------
crear un release tag -> codigo tal cual esta en el momento
 1)git tag -a v0.1.0 "fin seccion 4"
 2)git tag
 3) para subir el tag a Github :
 git push --tags
 nos muestra nuestro tag 
 debemos editar el tag para publicarlo 
 y nos muestra nuestro codigo hasta ese momento

 -------------------------
 git ignore no se suben los modules de NgModule xq lo importante esta en el package.json
 y solo necesito hace un npm install

--------------------------------------
modulo dragon ball -->ng g m dbz

ng g c dbz/mainPage  -> me crea la carpeta ( con los componentes main-page) devo usar el camelCase para hacaaerlo asi

ng g c dbz/mainPag --skipTest

---------
los parentises dentro de un elemento htnml quiere decir que esta escuhando
ngForn para usar formularios

las llaves cuadradras [] dentro de un componente html se usa para puntar a una propiedad

dentro de un tag html
() --> para escuhar o emitir eventos
[] --> para establecer alguna propiedad a este objeto
el ngModel lo podemos usar para emitir y recibir eventos
el | sirve para decir que tipo de dato quiero que grafique osea la informazion visual

-------------

se aconsejan usar componentes reutilizables

como pasar componentes de un padre a un hijo
con el @input lo usamos como atributo en el componente hijo
puedo exportar todas las interfazes que me sirvan

output un componente hijo que quiere emitir al padre
eventEmitter --> en de tipo generics
output sirve para emitir eventos
